/*
 * auto generated by tools(注意:千万不要手动修改本文件)
 * res_path
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Text;
using System.Linq;

[Serializable]
public class res_path : IBinarySerializable
{
	public int Id { get; set; }
	public string Comment { get; set; }
	public string ResType { get; set; }
	public string Path { get; set; }
	public string ItemType { get; set; }

	public void DeSerialize(BinaryReader reader)
	{
		Id = reader.ReadInt32();
		Comment = reader.ReadString();
		ResType = reader.ReadString();
		Path = reader.ReadString();
		ItemType = reader.ReadString();
	}

	public void Serialize(BinaryWriter writer)
	{
		writer.Write(Id);
		writer.Write(Comment);
		writer.Write(ResType);
		writer.Write(Path);
		writer.Write(ItemType);
	}
}

[Serializable]
public partial class res_pathConfig : IBinarySerializable
{
	public List<res_path> res_pathInfos = new List<res_path>();
	public void DeSerialize(BinaryReader reader)
	{
		int count = reader.ReadInt32();
		for (int i = 0;i < count; i++)
		{
			res_path tempData = new res_path();
			tempData.DeSerialize(reader);
			res_pathInfos.Add(tempData);
		}
	}

	public void Serialize(BinaryWriter writer)
	{
		writer.Write(res_pathInfos.Count);
		for (int i = 0; i < res_pathInfos.Count; i++)
		{
			res_pathInfos[i].Serialize(writer);
		}
	}

	public IEnumerable<res_path> QueryById(int id)
	{
		var datas = from d in res_pathInfos
					where d.Id == id
					select d;
		return datas;
	}
}
