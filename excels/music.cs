/*
 * auto generated by tools(注意:千万不要手动修改本文件)
 * music
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Text;
using System.Linq;

[Serializable]
public class music : IBinarySerializable
{
	public int Id { get; set; }
	public string Name { get; set; }
	public string Owner { get; set; }
	public string Path { get; set; }

	public void DeSerialize(BinaryReader reader)
	{
		Id = reader.ReadInt32();
		Name = reader.ReadString();
		Owner = reader.ReadString();
		Path = reader.ReadString();
	}

	public void Serialize(BinaryWriter writer)
	{
		writer.Write(Id);
		writer.Write(Name);
		writer.Write(Owner);
		writer.Write(Path);
	}
}

[Serializable]
public partial class musicConfig : IBinarySerializable
{
	public List<music> musicInfos = new List<music>();
	public void DeSerialize(BinaryReader reader)
	{
		int count = reader.ReadInt32();
		for (int i = 0;i < count; i++)
		{
			music tempData = new music();
			tempData.DeSerialize(reader);
			musicInfos.Add(tempData);
		}
	}

	public void Serialize(BinaryWriter writer)
	{
		writer.Write(musicInfos.Count);
		for (int i = 0; i < musicInfos.Count; i++)
		{
			musicInfos[i].Serialize(writer);
		}
	}

	public IEnumerable<music> QueryById(int id)
	{
		var datas = from d in musicInfos
					where d.Id == id
					select d;
		return datas;
	}
}
