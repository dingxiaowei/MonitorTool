/*
 * auto generated by tools(注意:千万不要手动修改本文件)
 * fashionuiconfig
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Text;
using System.Linq;

[Serializable]
public class fashionuiconfig : IBinarySerializable
{
	public string EventType { get; set; }
	public int Id { get; set; }
	public string Name { get; set; }
	public int Type { get; set; }
	public int ItemId { get; set; }
	public string IconName { get; set; }
	public string IconPath { get; set; }
	public string ItemColor { get; set; }

	public void DeSerialize(BinaryReader reader)
	{
		EventType = reader.ReadString();
		Id = reader.ReadInt32();
		Name = reader.ReadString();
		Type = reader.ReadInt32();
		ItemId = reader.ReadInt32();
		IconName = reader.ReadString();
		IconPath = reader.ReadString();
		ItemColor = reader.ReadString();
	}

	public void Serialize(BinaryWriter writer)
	{
		writer.Write(EventType);
		writer.Write(Id);
		writer.Write(Name);
		writer.Write(Type);
		writer.Write(ItemId);
		writer.Write(IconName);
		writer.Write(IconPath);
		writer.Write(ItemColor);
	}
}

[Serializable]
public partial class fashionuiconfigConfig : IBinarySerializable
{
	public List<fashionuiconfig> fashionuiconfigInfos = new List<fashionuiconfig>();
	public void DeSerialize(BinaryReader reader)
	{
		int count = reader.ReadInt32();
		for (int i = 0;i < count; i++)
		{
			fashionuiconfig tempData = new fashionuiconfig();
			tempData.DeSerialize(reader);
			fashionuiconfigInfos.Add(tempData);
		}
	}

	public void Serialize(BinaryWriter writer)
	{
		writer.Write(fashionuiconfigInfos.Count);
		for (int i = 0; i < fashionuiconfigInfos.Count; i++)
		{
			fashionuiconfigInfos[i].Serialize(writer);
		}
	}

	public IEnumerable<fashionuiconfig> QueryById(int id)
	{
		var datas = from d in fashionuiconfigInfos
					where d.Id == id
					select d;
		return datas;
	}
}
